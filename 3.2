#include <stdio.h>
#include <stdlib.h>

// Определение структуры узла стека
typedef struct Node {
    int data;
    struct Node* next;
} Node;

// Определение структуры стека
typedef struct Stack {
    Node* top;
} Stack;

// Функция для создания нового узла
Node* newNode(int data) {
    Node* temp = (Node*)malloc(sizeof(Node));
    temp->data = data;
    temp->next = NULL;
    return temp;
}

// Функция для создания стека
Stack* createStack() {
    Stack* stack = (Stack*)malloc(sizeof(Stack));
    stack->top = NULL;
    return stack;
}

// Функция для добавления элемента в стек
void push(Stack* stack, int data) {
    Node* temp = newNode(data);
    temp->next = stack->top;
    stack->top = temp;
}

// Функция для удаления элемента из стека
int pop(Stack* stack) {
    if (stack->top == NULL) {
        printf("Стек пуст\n");
        return -1;
    }
    Node* temp = stack->top;
    stack->top = stack->top->next;
    int popped = temp->data;
    free(temp);
    return popped;
}

// Функция для печати содержимого стека
void printStack(Stack* stack) {
    Node* temp = stack->top;
    while (temp != NULL) {
        printf("%d ", temp->data);
        temp = temp->next;
    }
    printf("\n");
}

int main() {
    Stack* stack = createStack();
    push(stack, 10);
    push(stack, 20);
    push(stack, 30);
    push(stack, 40);
    printf("Содержимое стека: ");
    printStack(stack);
    printf("Удалённый элемент: %d\n", pop(stack));
    printf("Содержимое стека после удаления: ");
    printStack(stack);
    return 0;
}
